{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macie\\\\OneDrive\\\\Pulpit\\\\my-app\\\\src\\\\Canvas\\\\Panels\\\\CanvasPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport DrawUtils from './DrawUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CanvasPanel({\n  stationsManager,\n  connectionsManager,\n  trainManager,\n  current_train_index\n}) {\n  _s();\n  const drawUtils = new DrawUtils();\n  const drawMap = (ctx, img) => {\n    ctx.drawImage(img, 0, 0, 500, 500);\n  };\n  const drawStations = ctx => {\n    stationsManager.stations.forEach(station => drawUtils.drawStation(ctx, station.posX, station.posY, station.name));\n  };\n  const drawConnections = ctx => {\n    connectionsManager.connections.forEach(connection => drawUtils.drawLine(ctx, connection.city1.posX, connection.city1.posY, connection.city2.posX, connection.city2.posY));\n  };\n  const drawTrains = ctx => {\n    trainManager.trains.map((train, index) => drawUtils.drawTrain(ctx, train, index === current_train_index));\n  };\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.src = process.env.PUBLIC_URL + 'mapa_polski.jpg';\n    let lastTimestamp = performance.now();\n    let accumulatedTime = 0;\n    const updateTrainPositions = deltaTime => {\n      let animationSpeed = 1;\n      accumulatedTime += deltaTime;\n      if (accumulatedTime >= animationSpeed) {\n        trainManager.update_trains_positions();\n        accumulatedTime = 0;\n      }\n    };\n    const drawOnCanvas = timestamp => {\n      const deltaTime = timestamp - lastTimestamp;\n      lastTimestamp = timestamp;\n      updateTrainPositions(deltaTime);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawMap(ctx, img);\n      drawConnections(ctx);\n      drawStations(ctx);\n      drawTrains(ctx);\n      requestAnimationFrame(drawOnCanvas);\n    };\n    img.onload = () => {\n      drawMap(ctx, img);\n      drawConnections(ctx);\n      drawStations(ctx);\n      requestAnimationFrame(drawOnCanvas);\n    };\n  }, [stationsManager, connectionsManager, trainManager, current_train_index]);\n  ;\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 500,\n    height: 500\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n}\n_s(CanvasPanel, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CanvasPanel;\nexport default CanvasPanel;\nvar _c;\n$RefreshReg$(_c, \"CanvasPanel\");","map":{"version":3,"names":["React","useEffect","useRef","DrawUtils","jsxDEV","_jsxDEV","CanvasPanel","stationsManager","connectionsManager","trainManager","current_train_index","_s","drawUtils","drawMap","ctx","img","drawImage","drawStations","stations","forEach","station","drawStation","posX","posY","name","drawConnections","connections","connection","drawLine","city1","city2","drawTrains","trains","map","train","index","drawTrain","canvasRef","canvas","current","getContext","Image","src","process","env","PUBLIC_URL","lastTimestamp","performance","now","accumulatedTime","updateTrainPositions","deltaTime","animationSpeed","update_trains_positions","drawOnCanvas","timestamp","clearRect","width","height","requestAnimationFrame","onload","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/macie/OneDrive/Pulpit/my-app/src/Canvas/Panels/CanvasPanel.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport DrawUtils from './DrawUtils';\r\n\r\nfunction CanvasPanel({stationsManager, connectionsManager, trainManager, current_train_index}) {\r\n  const drawUtils = new DrawUtils();\r\n\r\n  const drawMap = (ctx, img) => \r\n  {\r\n    ctx.drawImage(img, 0, 0, 500, 500);\r\n  }\r\n\r\n  const drawStations = (ctx) => \r\n  {\r\n    stationsManager.stations.forEach(station => drawUtils.drawStation(ctx, station.posX, station.posY, station.name));\r\n  }\r\n\r\n  const drawConnections = (ctx) => \r\n  {\r\n    connectionsManager.connections.forEach(connection => drawUtils.drawLine(ctx, connection.city1.posX, connection.city1.posY, connection.city2.posX, connection.city2.posY))\r\n  }\r\n\r\n  const drawTrains = (ctx) =>\r\n  {\r\n    trainManager.trains.map((train, index) => drawUtils.drawTrain(ctx, train, index === current_train_index))\r\n  }\r\n\r\n  const canvasRef = useRef(null);\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const img = new Image();\r\n    img.src = process.env.PUBLIC_URL + 'mapa_polski.jpg';\r\n\r\n    let lastTimestamp = performance.now();\r\n    let accumulatedTime = 0;\r\n\r\n    const updateTrainPositions = (deltaTime) => {\r\n      let animationSpeed = 1;\r\n\r\n      accumulatedTime += deltaTime;\r\n      if (accumulatedTime >= animationSpeed) {\r\n        trainManager.update_trains_positions();\r\n        accumulatedTime = 0;\r\n      }\r\n    };\r\n\r\n    const drawOnCanvas = (timestamp) => {\r\n      const deltaTime = timestamp - lastTimestamp;\r\n      lastTimestamp = timestamp;\r\n\r\n      updateTrainPositions(deltaTime);\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      drawMap(ctx, img);\r\n      drawConnections(ctx);\r\n      drawStations(ctx);\r\n      drawTrains(ctx);\r\n\r\n      requestAnimationFrame(drawOnCanvas);\r\n    };\r\n\r\n    img.onload = () => {\r\n      drawMap(ctx, img);\r\n      drawConnections(ctx);\r\n      drawStations(ctx);\r\n      requestAnimationFrame(drawOnCanvas);\r\n    };\r\n\r\n  }, [stationsManager, connectionsManager, trainManager, current_train_index]);\r\n;\r\n\r\n  return <canvas ref={canvasRef} width={500} height={500} />;\r\n}\r\n\r\nexport default CanvasPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}