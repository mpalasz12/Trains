{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macie\\\\OneDrive\\\\Pulpit\\\\my-app\\\\src\\\\Canvas\\\\Panels\\\\CanvasPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport DrawUtils from './DrawUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CanvasPanel({\n  stationsManager,\n  connectionsManager,\n  trainManager\n}) {\n  _s();\n  const drawUtils = new DrawUtils();\n  const drawMap = (ctx, img) => {\n    ctx.drawImage(img, 0, 0, 500, 500);\n  };\n  const drawStations = ctx => {\n    stationsManager.stations.forEach(station => drawUtils.drawPoint(ctx, station.posX, station.posY, station.name));\n  };\n  const drawConnections = ctx => {\n    connectionsManager.connections.forEach(connection => drawUtils.drawLine(ctx, connection.city1.posX, connection.city1.posY, connection.city2.posX, connection.city2.posY));\n  };\n  const drawTrains = ctx => {\n    trainManager.trains.forEach(train => drawPoint(ctx, train.posX, train.posY));\n  };\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    img.src = process.env.PUBLIC_URL + 'mapa_polski.jpg';\n    img.onload = () => {\n      drawMap(ctx, img);\n      drawConnections(ctx);\n      drawStations(ctx);\n      drawTrains(ctx);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 500,\n    height: 500\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n_s(CanvasPanel, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CanvasPanel;\nexport default CanvasPanel;\nvar _c;\n$RefreshReg$(_c, \"CanvasPanel\");","map":{"version":3,"names":["React","useEffect","useRef","DrawUtils","jsxDEV","_jsxDEV","CanvasPanel","stationsManager","connectionsManager","trainManager","_s","drawUtils","drawMap","ctx","img","drawImage","drawStations","stations","forEach","station","drawPoint","posX","posY","name","drawConnections","connections","connection","drawLine","city1","city2","drawTrains","trains","train","canvasRef","canvas","current","getContext","Image","src","process","env","PUBLIC_URL","onload","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/macie/OneDrive/Pulpit/my-app/src/Canvas/Panels/CanvasPanel.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport DrawUtils from './DrawUtils';\r\n\r\nfunction CanvasPanel({stationsManager, connectionsManager, trainManager}) {\r\n  const drawUtils = new DrawUtils();\r\n\r\n  const drawMap = (ctx, img) => \r\n  {\r\n    ctx.drawImage(img, 0, 0, 500, 500);\r\n  }\r\n\r\n  const drawStations = (ctx) => \r\n  {\r\n    stationsManager.stations.forEach(station => drawUtils.drawPoint(ctx, station.posX, station.posY, station.name));\r\n  }\r\n\r\n  const drawConnections = (ctx) => \r\n  {\r\n    connectionsManager.connections.forEach(connection => drawUtils.drawLine(ctx, connection.city1.posX, connection.city1.posY, connection.city2.posX, connection.city2.posY))\r\n  }\r\n\r\n  const drawTrains = (ctx) =>\r\n  {\r\n    trainManager.trains.forEach(train => drawPoint(ctx, train.posX, train.posY))\r\n  }\r\n\r\n  const canvasRef = useRef(null);\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const img = new Image();\r\n    img.src = process.env.PUBLIC_URL + 'mapa_polski.jpg';\r\n    img.onload = () => {\r\n      drawMap(ctx, img);\r\n      drawConnections(ctx);\r\n      drawStations(ctx);\r\n      drawTrains(ctx);\r\n    };\r\n  });\r\n\r\n  return <canvas ref={canvasRef} width={500} height={500}/>;\r\n}\r\n\r\nexport default CanvasPanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,WAAWA,CAAC;EAACC,eAAe;EAAEC,kBAAkB;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACxE,MAAMC,SAAS,GAAG,IAAIR,SAAS,CAAC,CAAC;EAEjC,MAAMS,OAAO,GAAGA,CAACC,GAAG,EAAEC,GAAG,KACzB;IACED,GAAG,CAACE,SAAS,CAACD,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;EACpC,CAAC;EAED,MAAME,YAAY,GAAIH,GAAG,IACzB;IACEN,eAAe,CAACU,QAAQ,CAACC,OAAO,CAACC,OAAO,IAAIR,SAAS,CAACS,SAAS,CAACP,GAAG,EAAEM,OAAO,CAACE,IAAI,EAAEF,OAAO,CAACG,IAAI,EAAEH,OAAO,CAACI,IAAI,CAAC,CAAC;EACjH,CAAC;EAED,MAAMC,eAAe,GAAIX,GAAG,IAC5B;IACEL,kBAAkB,CAACiB,WAAW,CAACP,OAAO,CAACQ,UAAU,IAAIf,SAAS,CAACgB,QAAQ,CAACd,GAAG,EAAEa,UAAU,CAACE,KAAK,CAACP,IAAI,EAAEK,UAAU,CAACE,KAAK,CAACN,IAAI,EAAEI,UAAU,CAACG,KAAK,CAACR,IAAI,EAAEK,UAAU,CAACG,KAAK,CAACP,IAAI,CAAC,CAAC;EAC3K,CAAC;EAED,MAAMQ,UAAU,GAAIjB,GAAG,IACvB;IACEJ,YAAY,CAACsB,MAAM,CAACb,OAAO,CAACc,KAAK,IAAIZ,SAAS,CAACP,GAAG,EAAEmB,KAAK,CAACX,IAAI,EAAEW,KAAK,CAACV,IAAI,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMW,SAAS,GAAG/B,MAAM,CAAC,IAAI,CAAC;EAC9BD,SAAS,CAAC,MAAM;IACd,MAAMiC,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMtB,GAAG,GAAGqB,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMtB,GAAG,GAAG,IAAIuB,KAAK,CAAC,CAAC;IACvBvB,GAAG,CAACwB,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,iBAAiB;IACpD3B,GAAG,CAAC4B,MAAM,GAAG,MAAM;MACjB9B,OAAO,CAACC,GAAG,EAAEC,GAAG,CAAC;MACjBU,eAAe,CAACX,GAAG,CAAC;MACpBG,YAAY,CAACH,GAAG,CAAC;MACjBiB,UAAU,CAACjB,GAAG,CAAC;IACjB,CAAC;EACH,CAAC,CAAC;EAEF,oBAAOR,OAAA;IAAQsC,GAAG,EAAEV,SAAU;IAACW,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC3D;AAACvC,EAAA,CAtCQJ,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}